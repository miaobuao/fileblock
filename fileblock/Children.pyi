from typing import Iterable
from Block import Block

class Children:

    def __init__(self, data=[], copy=True):
        self.data = [] # type:list[Block]

    def map(self, fn)->Children:
        ...
        
    def to_json(self, path: str, file_only=False, dir_only=False, force_abspath = False, indent=None)->None:
        """注：若file_only 和 dir_only 同时为 True 则 全都输出."""
        ...

    def copy(self)->Children:...

    def shuffle(self)->Children:...

    def unfold(self)->Children:...

    def append(self, obj)->Children:...

    def extend(self, obj)->Children:...
    
    def remove(self, x)->Children:...

    def pop(self, *idx)->Children:...

    @staticmethod
    def make(*child)->Children:...

    @property
    def abspaths(self)->Children:...
    
    
    @property
    def super_dir_names(self)->Children:...

    def __add__(self, x)->Children:...

    def __len__(self)->int:...
    
    def __iter__(self)->Iterable:...
    
    def __getitem__(self, idx)->Children|Block:...

    def __setitem__(self, k, v)->Children:...